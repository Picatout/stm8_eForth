WORDS
 PERIOD TONE-INIT T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
FORGET TONE-INIT ok
WORDS
 T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
: PWM-PER ( u1 -- u2 ) \ ca ompute varl  lue for ARR from frequency
64  31250 64 ROT * DUP 2/ >R */MOD W SWAP R> / + ;  ok
65 pw  PWM-PER . 30769 ok
31609 PWM-PER ok
. 63 ok
523   ,     PWM-PER . 3824 ok
: PWM-DC ( U 1 a u -- ) \\  com,p  pute value for CCRX x e and set it.  in a.
OVER @ /MOD      2        DUP 2/ >R OVER @   2=   - @ 2 OVER /mo  m MOF D sw  SWAP R> / + ; sw  SWAP ! ; ok
523 PWER  M-PER T2-ARRH ! T2-CCR1H 50  ok
T2-ARRH @ . T2-CCR1H @ . 3824 0 ok
Y3=VV     7 Y T2-CCR1H 50 PWM-DC T2-CCR1H @ . 0 ok
GPT   G FORGET PWM-P DC  For RAM definition do REBOOT?
ERB   REB   : PWM-DC A a u -- ) \ compute value for   CRR  CRz x f frm om a ARR VA  value and u1 ? ? % reDef PWM-DC a?
DUP 2/ >R         OVER @ SWAP      100 /MOD SWAP 50 / + ;  compile only?
: PWM-DC OVER @ 100 /MOD SWAP 50 / + ; reDef PWM-DC ok
T2-ARRH -W  50 PWM-DC . 38 ok
T2-ARRH @ . 3824 ok
    : PWM-DC OVER @ 100 */MOD SWAP 50 / + ; reDef PWM-DC ok
T2-ARRH @ 50 PWM-DC . 1912 ok
: TONE-INIT 3 T2-PSCR C! 1 T2-CCER1 C! 6 4 LSHIFT T2-CCMR1 C! ; ok
TONE-INIT ok
: TONE PWM-PER T2-ARRH ! T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
1000 523 TONE ok
100 1000 TONE ok
: TONE  reDef TONE
pw  PWM-PER T2-ARRH ! T2-ARRR H 50 PWM-DC .S
T2-CCR1H C ! .S
1 T2-CR1 C! 1 T2-G EGR C! C!    PAUSE 0 T2-CR1 C! ; ok
100 1000 TONE
 21261 50 21261 1000 100 100 21261 1000 <sp 
 21261 50 21261 1000 100 100 21261 <sp  ok
QUIT ok
.S
 21261 50 21261 1000 100 100 <sp  ok
QUIT ok
.S
 21261 50 21261 1000 100 100 <sp  ok
2DROP SW  2DROP 2DROP .S
 <sp  ok
100 TON   1000 TONE
 100 21261 1000 <sp 
 100 21261 <sp  ok
REBOOTÿ
stm8eForth v3.0
: PWM-PER 
R 31250 64 ROT DUP 2/ >r R */MOD W SWAP R> / > ; >?
: PWM-PER 31250 64 ROT DUP 3 2/ >R i/  */MOD SWAP R> / + ; ok
.S
 <sp  ok
1000 p PWM-PER .S
 2000 <sp  ok
:   DROP ok
: PWM-DC OVER @ 100 */MOD SWAP 50 / + ; ok
1000 T PWM-PER T2-ARRH ! ok
T2-ARRH 50 PWM-DC .S
 21261 1000 <sp  ok
: pwm   PWM-DC SWAP @ 100 */MOD SWAP 50 / + ; reDef PWM-DC ok
T2-ARRH 50 PWM-DC .S
 21261 1000 1000 <sp  ok
2DROP DROP ok
.S
 <sp  ok
T2-ARRH 50 PWM-DC .S
 1000 <sp  ok
DROP ok
: TONE-INIT 
3 T2-PSCR C! 1 T2-CCER1 C! 6 3 4 LSHIFT T2-CCMR1 C! ; ok
TONE-INIT ok
: TONE ( MS    mf s fr ) -- )
pw  PWM-PER T2-ARRH ! T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
S .S
 <sp  ok
100 523 TONE ok
10  500 R 523 TONE ok
.S
 <sp  ok
: TONE  reDef TONE
PWM-PER T2-ARRH ! T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! PAUSE 0T2   T2-CR1 C! ; ok
T2-EGR C@ . 0 ok
500 523 TONE ok
reb   re RE   REBOOTÿ
stm8eForth v3.0
WORDS
 T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
: PWM-PERE  31500 0 64 ROT DUP 2/ >r R                                TO-FLASH ok
: PWM-PER
31250 64 ROT DUP 2/ >r R */MOD SWAP R> / + ; ok
: PWM-DC 
SWAP @ 100 */MOD SWAP 50 / + ; ok
: TONE-INIT 
3 T2-PSCR c C! 1 T2-CCER1 C! 6 4 LSHIFT T2-CCMR1 C! ; ok
: TONE 
TONE-INIT
PWM-PERE  2-  T2-ARRH ! T2-ARRH @ 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! PAUSE 0 T2-CR1 C! ; ok
WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
694     50  250 694 TONE ok
T2-CCER1 C!   @ . 1 ok
T20 -CCMR1 C@ . 96 ok
T2-PSCR C    @ . 3 ok
T2-ARRH @ . 2882 ok
T2-CCMR1   R1H @ . 1441 ok
1 T2-CR1 C! ok
T2-PSCR C@ . 3 ok
0 T2-PSCR C! ok
3 T2-PSCR C! ok
T2=  C    -PSCR C@ . 3 ok
T2= -ARRH @ . 2882 ok
1000 PWM-DC  R PER . 2000 ok
T2-A    P T2-ARR      1000 1000 TONE ok
250 2000 TONE ok
500 523 TONE ok
T2-ARRH @ . 3824 ok
T2-CCRM 1H @ . 1912 ok
500 523 TONE ok
FORGET TONE ok
: TONE 
TONE-INIT 
PWM-PER T2-ARRH ! T2-ARRH PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
500 523 TONEÿ
stm8eForth v3.0
TO  WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
FORGET TONE ok
WORDS
 TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
: TONE 
TONE-INIT 
PWM--ER   PER T2-ARRH ! T2-ARRH PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
FORGET TONE  For RAM definition do REBOOT?
REBOOTÿ
stm8eForth v3.0
WORDS
 TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
TO-FLASH ok
: TONE 
TOE NE-INIT 
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
500 523 TONE ok
WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
FORGET TONE ok
: TONE TONE    
TONE-INIT 
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
523    00 1000 TONE ok
500 523 TOE NE ok
698 TO      500 698 TONE ok
500 O O 932 TONE ok
87  794   500 794 TONE ok
REBOOTÿ
stm8eForth v3.0
WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
523    00 523 TONE ok
500 523 TONE ok
500 698 TONE ok
500 1000 TONE ok
500 2000 TONE ok
3000 T      500 3000 TONE ok
2500    500 T 2500 TONE ok
500 2500 TONE ok
500 1000 TONE ok
REBOOTÿ
stm8eForth v3.0
500 1000 TONE ok
500     TRN   REBOOTÿ
stm8eForth v3.0
WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
FORGET TONE ok
WORDS
 TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
: TONE 
TONE-INIT 
PWM-PER T2-ARRH ! 
T2-ARRH 50 PWM-DC T2-CCR1H !
1   $81 T2-CR1 C! T2-   1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
5 ER  RE  REBOT OTÿ
stm8eForth v3.0
WOR   TO-FLASH ok
: TONE
TONE-INIT
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
$81 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
REBOOTÿ
stm8eForth v3.0
WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
523    00 698 TONE ok
500 698 TONE ok
500 1000 TONE ok
4 500 1000 TONE ok
4 500 1000 TONE ok
500 440 TONE ok
500 440 TONE ok
5000 1000 TONE ok
45  4 500 4 1000 TONE ok
500 440 TONE ok
500 440 TONE ok
0 t2  T2-CCER1 C! ok
500 1000 TONE ok
500 1000 TONE ok
FORGET TONE ok
TFH LASH @ . 0 ok
WORDS
 TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
TO-FLASH ok
: TONE 
TONE-INIT 
PWM-PER T2-ARRH C !
T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 ! 3 T2-EGR ! PAUSE 0 T2-CR1 ! ; ok
523    00 440 TONEÿ
stm8eForth v3.0
WORDS
 TONE TONE-INIT PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
FORGET TONE ok
TO-FLASH ok
: TONE 
TONE-INIT 
PWM-PER T2-ARRH ! 
T20-A   -ARRH 50 PWM-DC 6 T2-CCR1H !
1 T2-CR1 C! 3 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
44  500 440 TONE ok
500 440 TONE ok
5000  1000 TONE ok
6 T2-ARRH @ . 2000 ok
FORGET ON  TONE-INIT ok
to  TO-FLASH ok
_TO   : TONE  -INIT 
3 T2-PC SCR !
1 T2-CCER1 C!
6 4 LSHIFT 1 2 LSHFIT +_  T2-CCMR1 C! LSHFIT?
TFLASH @ . -1 ok
: TONE-INIT 
3 T2-PSCR ! 
1 T2-CCER1 C!
T   6 4 LSHIFT 1 2 LSHIFT + T2-CCR MR1 c C1 C1?
: TONE-INIT
< 3 T2-PSCR !
6 4 LSHIFT 1 2 LSHIFT + T2-CCMR1 C!
; ok
: TONE 
TONE-NIT   INIT
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
500 440 TONE ok
5000  1000 TONE ok
forge     FORGET TONE-INIT ok
TFLASH @ . -1 ok
WORDS
 PWM-DC PWM-PER T2-CCR3L T2-CCR3H T2-CCR2L T2-CCR2H T2-CCR1L T2-CCR1H T2-ARRL T2-ARRH T2-PSCR T2-CNTRL T2-CNTRH T2-CCER2 T2-CCER1 T2-CCMR3 T2-CCMR2 T2-CCMR1 T2-EGR T2-SR2 T2-SR1 T2-IER T2-CR1 IFMOVE UPDAT-PTR FMOVE FADDR RAM2EE RFREE BUF2ROW ROW2BUF EEC, EE, SET-IVEC CHKIVEC RST-IVEC PRISTINE SET-OPT WR-ROW ROW-ERASE EE! EEC! WR-BYTE INC-FPTR LOCK UNLOCK UNLKFL UNLKEE FC@ F@ UPDAT-VP UPDAT-CP UPDAT-RUN UPDAT-LAST EEP-VP EEP-CP EEP-RUN EEP-LAST EEPROM FP! LN2 LOG2 12RT2 SQRT10 E SQRT3 SQRT2 PI COLD 'BOOT hi WORDS .ID >NAME .S DUMP dm+ _TYPE DOCONST CONSTANT VARIABLE CREATE IMMEDIATE I: : INIT-OFS CALL, ] I; ; OVERT $COMPILE $,n ?UNIQUE ." $" ABORT" AFT REPEAT WHILE AHEAD ELSE THEN IF AGAIN UNTIL BEGIN I NEXT FOR $," LITERAL COMPILE [COMPILE] C, , ALLOT ' QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT" ABORT QUERY ACCEPT KTAP TAP ^H NAME? FIND SAME? NAME> TOKEN WORD \ ( .( PARSE parse ? . U. U.R .R ."| $"| DO$ CR TYPE SPACES SPACE NUF? KEY NUMBER? DIGIT? DECIMAL HEX STR #> SIGN #S # HOLD <# EXTRACT DIGIT PACK0 ERASE FILL CMOVE @EXECUTE TIB PAD HERE COUNT 2@ 2! +! PICK DEPTH >CHAR -1 1 0 BL 2/ RSHIFT LSHIFT 1- 1+ 2* 2- 2+ */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = ABS - S>D DNEGATE NEGATE NOT + 2DUP 2DROP ROT ?DUP OFFSET RAMLAST LAST CP VP CONTEXT HLD 'EVAL TFLASH TBUF #TIB >IN TMP BASE DOVAR UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C@ C! @ ! EXIT EXECUTE BRANCH ?BRANCH NEXT DOLIT EMIT ?KEY TO-RAM TO-FLASH REBOOT TIMEOUT? TIMER PAUSE MSEC FREEVAR FORGET AUTORUN SET-ISP DI EI BYE ok
: TONE-INIT 
3 T2-PSCR C!
1 T2-CCER1 C!
6 4 LSHIFT 1 2 LSHIFT + T2-CCMR1 C!
; ok
: TONE 
TONE-INIT
PM WM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
523     400 523 TONE ok
400 1000 TONE ok
4000  100 TONE ok
400 440 TONE ok
400 100  0 TONE ok
T2-ARRH @ . 2000 ok
T2-CCR1H @ . 1000 ok
400 440 TONE ok
T2-A CCR1    ARRH @ . 4545 ok
FORGET TONE-INIT ok
TFLAH SH @ . -1 ok
: TONE INIT     -INIT
3 T2-PSCR C!
1 T2-CCER1 C!
6 4 LSHIFT 1 3 LSHI                   $d   d D 3 l LSHIFT 6 T2-CCMR1 C! ; ok
: TONE 
TONE-INIT
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T6 2-CCM R1H 1 !
  1 T2-CR1 C! 1 T2-EGR C! PAUSE 0 T2-CR1 C! ; ok
5004  440 TONE ok
5000    1000 TONE ok
500 44  200 TONE ok
500 440 TONE ok
500 440 TONE ok
T2-CCMR1 C1 !     @ . 104 ok
FORGET TONE ok
TFLASH @ . -1 ok
:TONE :TONE?
TON   : TONE
TNE  OPE  NE-INT IT
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
1 T2-EGR C! 1 T2-CR1 C! PAUSE 0 T2-CR1 C! ; ok
500 440 TONE ok
500 1000 TONE ok
500 2000 TONE ok
500 440 TONE ok
500 440 TONE ok
500 500 TONE ok
500 500 TONE ok
5---    500 1000 TONE ok
5000 1    1000 TONE ok
FORGET TONE ok
: TONE 
TONE-INIT
; ok
FORGET TONE ok
TFLASH @ . -1 ok
: TONE 
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T2-CCR1H !
T2-  ONE-INIT         1 T2-EGR C!
TONE-INIT
1 T2-CR1 C! PAUSE 0 T2-CR1 C! ; ok
4 500 1000 TONE         440 TONE ok
500 44  300 TONE ok
500 1000 TONE ok
500 1500 TONE ok
500 440 TONE ok
: FORGET TONE ok
: TONE 
PWM-PER T2-ARRH !
T2-ARRH 50 PWM-DC T6 2-CCR1H !
TONE-INI I        TONE-INIT
1 T2-EGR C!             3 T2-EGR C!
1 T2-CR1 C! PAUSE 0 T2- -   DUP T2-CR1 C! T2-CCER1 c C! ; ok
500 440 TONE ok
500 1000 TONE ok
500 690 TONE ok
500 PWM-PER T2-ARRH ! ok
T2-ARRH 50 PWM-DC T2-CCR1H ! ok
TONE-INIT 1 T2-EGC R C! 1 T2-CR1 C! ok
0 T2-CR1 C! ok
1000 PWM-PER T2-ARRH ! ok
62  T2-ARRH 50 PWM-DC T2-CCR1H ! ok
T 1 T2-EGR C! 1 T2-CR1 c C! ok
0 T2-CR1 C! ok
t2  T2-CCR MR1 C@ . 104 ok
FORGET TONE ok
: TONE 
TOE NE-INIT
PWM-PER DUP 8 RSHIFT T2-ARRL H C! T2-ARRL c1  C!
T2-ARRH 50 PWM-DC DUP 8 RSHIFT TR  T2-ARR   CCR1H C! T2-A  -CCR1L C!
1 T2-EGRC  C! 1 T2-CR1 C! PAUSE 0 T2-CR1 C! ; ok
4 500 440 TONE ok
500 1000 TONE ok
500 689 TONE ok
